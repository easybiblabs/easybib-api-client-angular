!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.easybibApiClient=e()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require){require("angular-storage"),angular.module("easybib-api-client",["angular-storage"]).factory(require("./easybib-api-client"))},{"./easybib-api-client":4,angular:3,"angular-storage":2}],2:[function(){!function(){angular.module("angular-storage",["angular-storage.store"]),angular.module("angular-storage.internalStore",["angular-storage.storage"]).factory("InternalStore",["storage","$log",function(storage,$log){function InternalStore(namespace,delimiter){this.namespace=namespace||null,this.delimiter=delimiter||".",this.inMemoryCache={}}return InternalStore.prototype.getNamespacedKey=function(key){return this.namespace?[this.namespace,key].join(this.delimiter):key},InternalStore.prototype.set=function(name,elem){this.inMemoryCache[name]=elem,storage.set(this.getNamespacedKey(name),JSON.stringify(elem))},InternalStore.prototype.get=function(name){var obj=null;if(name in this.inMemoryCache)return this.inMemoryCache[name];var saved=storage.get(this.getNamespacedKey(name));try{obj="undefined"==typeof saved||"undefined"===saved?void 0:JSON.parse(saved),this.inMemoryCache[name]=obj}catch(e){$log.error("Error parsing saved value",e),this.remove(name)}return obj},InternalStore.prototype.remove=function(name){this.inMemoryCache[name]=null,storage.remove(this.getNamespacedKey(name))},InternalStore}]),angular.module("angular-storage.storage",[]).service("storage",["$window","$injector",function($window,$injector){if($window.localStorage)this.set=function(what,value){return $window.localStorage.setItem(what,value)},this.get=function(what){return $window.localStorage.getItem(what)},this.remove=function(what){return $window.localStorage.removeItem(what)};else{var $cookieStore=$injector.get("$cookieStore");this.set=function(what,value){return $cookieStore.put(what,value)},this.get=function(what){return $cookieStore.get(what)},this.remove=function(what){return $cookieStore.remove(what)}}}]),angular.module("angular-storage.store",["angular-storage.internalStore"]).factory("store",["InternalStore",function(InternalStore){var store=new InternalStore;return store.getNamespacedStore=function(namespace,key){return new InternalStore(namespace,key)},store}])}()},{}],3:[function(){},{}],4:[function(require,module){var EasyBibApiClient=function(UserProfile,$q,$http,store,EasyBibApiAccessUrl){this.store=store,this.$q=$q,this.$http=$http,this.url={},this.url={access:function(){return EasyBibApiAccessUrl()}}};EasyBibApiClient.prototype={getAccessToken:function(){var deferred,accessData,self=this;return deferred=self.$q.defer(),accessData=self.store.get("easybib-api-access-data"),null!==accessData?(deferred.resolve(accessData),deferred.promise):(this.$http.get(this.url.access()).then(function(response){self.store.set("easybib-api-access-data",response.data),deferred.resolve(response.data)})["catch"](function(error){deferred.reject(error)}),deferred.promise)},createRequest:function(initObj,token){var requestObj;return requestObj={method:"GET",headers:{Accept:"application/vnd.com.easybib.data+json",Authorization:"Bearer "+token}},angular.extend(requestObj,initObj),requestObj},get:function(url){var self=this,deferred=self.$q.defer();return self.getAccessToken().then(function(accessData){var req=self.createRequest({url:url},accessData.access_token);self.request(req).then(function(response){deferred.resolve(response)})}),deferred.promise},post:function(url,data){var self=this,deferred=self.$q.defer();return self.getAccessToken().then(function(accessData){var req=self.createRequest({method:"POST",data:{data:data},url:url},accessData.access_token);self.request(req).then(function(response){deferred.resolve(response)})}),deferred.promise},put:function(url,data){var self=this,deferred=self.$q.defer();return self.getAccessToken().then(function(accessData){var req=self.createRequest({method:"PUT",data:{data:data},url:url},accessData.access_token);self.request(req).then(function(response){deferred.resolve(response)})}),deferred.promise},"delete":function(url){var self=this,deferred=self.$q.defer();return self.getAccessToken().then(function(accessData){var req=self.createRequest({method:"DELETE",url:url},accessData.access_token);self.request(req).then(function(response){deferred.resolve(response)})}),deferred.promise},request:function(opts,retryCount){var self=this,deferred=self.$q.defer();return retryCount="undefined"==typeof retryCount?1:retryCount,self.$http(opts).then(function(data){deferred.resolve(data)})["catch"](function(error){return 401===error.status||400===error.status?self.retry(opts,error,deferred,retryCount):void deferred.reject(error)}),deferred.promise},retry:function(reqOpts,error,df,times,waitMs){var cont,self=this;return self.store.remove("easybib-api-access-data"),times="undefined"==typeof times?1:times,waitMs=waitMs||1e3,cont=function(){self.getAccessToken().then(function(accessData){reqOpts.headers.Authorization="Bearer "+accessData.access_token,self.request(reqOpts,times-1).then(function(data){df.resolve(data)})})},times>0?void setTimeout(cont,waitMs):void df.reject(error)}},module.exports=EasyBibApiClient},{angular:3}]},{},[1])(1)});